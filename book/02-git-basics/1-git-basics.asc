[[_git_basics_chapter]]
//////////////////////////
== Git Basics
//////////////////////////
== Git의 기초

//////////////////////////
If you can read only one chapter to get going with Git, this is it.
This chapter covers every basic command you need to do the vast majority of the things you'll eventually spend your time doing with Git.
By the end of the chapter, you should be able to configure and initialize a repository, begin and stop tracking files, and stage and commit changes.
We'll also show you how to set up Git to ignore certain files and file patterns, how to undo mistakes quickly and easily, how to browse the history of your project and view changes between commits, and how to push and pull from remote repositories.
//////////////////////////
Git을 사용하는 방법을 알고 싶은데 한 챕터밖에 읽을 시간이 없다면 이번 챕터를 읽어야 한다.
Git에서 자주 사용하는 명령어는 모두 2장에 등장한다.
2장을 다 읽으면 저장소를 만들고 설정하는 방법, 파일을 추적하거나(Track) 추적을 그만두는 방법, 변경 내용을 Stage하고 커밋하는 방법을 알게 된다.
파일이나 파일 패턴을 무시하도록 Git을 설정하는 방법, 실수를 쉽고 빠르게 만회하는 방법, 프로젝트 히스토리를 조회하고 커밋을 비교하는 방법, 리모트 저장소에 Push하고 Pull하는 방법을 살펴본다.

include::sections/getting-a-repository.asc[]

include::sections/recording-changes.asc[]

include::sections/viewing-history.asc[]

include::sections/undoing.asc[]

include::sections/remotes.asc[]

include::sections/tagging.asc[]

include::sections/aliases.asc[]

//////////////////////////
=== Summary
//////////////////////////
=== 요약

//////////////////////////
At this point, you can do all the basic local Git operations – creating or cloning a repository, making changes, staging and committing those changes, and viewing the history of all the changes the repository has been through.
Next, we'll cover Git's killer feature: its branching model.
//////////////////////////
이제 우리는 로컬에서 사용할 수 있는 Git 명령에 대한 기본 지식은 갖추었다. 저장소를 만들고 Clone하는 방법, 수정하고 나서 Stage하고 커밋하는 방법, 저장소의 히스토리를 조회하는 방법 등을 살펴보았다.
이어지는 장에서는 Git의 가장 강력한 기능인 브랜치 모델을 살펴볼 것이다.
